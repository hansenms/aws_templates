{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "KeyName": {
            "Description": "The EC2 Key Pair to allow SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NodeInstanceType": {
            "Type": "String",
            "Default": "m4.4xlarge",
            "AllowedValues": [
                "m3.xlarge",
                "m4.4xlarge",
                "c3.4xlarge",
                "c4.8xlarge",
                "c4.4xlarge",
                "c4.2xlarge"
            ],
            "Description": "Compute node instance type"
        },
        "NodeAMI": {
            "Type": "String",
            "Default": "ami-a98cb2c3",
            "Description": "Enter ami"
        },
        "NFSInstanceType": {
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.medium",
                "t2.large"
            ],
            "Description": "NFS Server instance type"
        },
        "NFSAMI": {
            "Type": "String",
            "Default": "ami-8fcee4e5",
            "Description": "Enter ami"
        }
    },
    "Resources": {
        "GadgetronVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": "10.0.0.0/16"
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "GadgetronVPC"
                }
            }
        },
        "InternetGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "GadgetronSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "GadgetronVPC"
                },
                "CidrBlock": "10.0.0.0/24"
            }
        },
        "Route": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "GatewayId": {
                    "Ref": "InternetGW"
                },
                "DestinationCidrBlock": "0.0.0.0/0"
            },
            "DependsOn": [
                "IGWAttach"
            ]
        },
        "RTBAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "GadgetronSubnet"
                }
            }
        },
        "NFSSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable internal access to the NFS Instance",
                "VpcId"            : {
                    "Ref" : "GadgetronVPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "111",
                        "ToPort"     : "111",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "111",
                        "ToPort"     : "111",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "892",
                        "ToPort"     : "892",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "892",
                        "ToPort"     : "892",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "32803",
                        "ToPort"     : "32803",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "32769",
                        "ToPort"     : "32769",
                        "CidrIp"     : "10.0.0.0/16"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : "10.0.0.0/16"
                    }
                ]
            }
        },
        "FileServerInstance" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "Comment" : "",
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "nfs-utils"             : [],
                                "nfs-utils-lib"         : [],
                                "rpcbind"               : []                
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "nfs" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "SecurityGroupIds" : [{ "Ref" : "NFSSecurityGroup" }],
                "SubnetId" : { "Ref" : "GadgetronSubnet" },
                "InstanceType" : { "Ref" : "NFSInstanceType" },
                "KeyName" : { "Ref" : "KeyName" },
                "ImageId": {
                    "Ref": "NFSAMI"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdcz",
                        "Ebs": {
                            "DeleteOnTermination": true,
                            "Encrypted": false,
                            "VolumeSize": 30,
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": true,
                            "VolumeSize": 10,
                            "VolumeType": "gp2"
                        }
                    }
                ],

                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "yum update -y\n",
                                "yum install aws-cfn-bootstrap -y\n",
                                "# download data and install file\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " -r NFSServer ",
                                "    --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init'\n",
                                "mkdir -p /nfs\n",
                                "echo \"/nfs 10.0.0.0/16(rw,no_root_squash,no_subtree_check,sync)\" > /etc/exports\n",
                                "exportfs -av\n",
                                "/sbin/service rpcbind restart\n",
                                "/sbin/service nfs restart\n"
                            ]
                        ]
                    }
                }

            }
        },
        "gtCluster": {
            "Type": "AWS::ECS::Cluster"
        },
        "gtASLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "SecurityGroups": [
                    {
                        "Ref": "gtCloudSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                { "Fn::Join": [ "", ["echo ECS_CLUSTER=", {"Ref": "gtCluster"}, " >> /etc/ecs/ecs.config \n"]]},
                                "yum install -y nfs-utils rpcbind\n",
                                "mkdir -p /mnt/nfsshare\n",
                                "echo \"",
                                { "Fn::GetAtt": ["FileServerInstance", "PrivateIp"] },
                                ":/nfs    /mnt/nfsshare       nfs rsize=8192,wsize=8192,timeo=14,intr 0 0\" >> /etc/fstab\n",
                                "/sbin/service rpcbind restart\n",
                                "mount -a"
                            ]
                        ]
                    }
                },
                "IamInstanceProfile": "gtCloudNode",
                "EbsOptimized": false,
                "InstanceMonitoring": true,
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdcz",
                        "Ebs": {
                            "DeleteOnTermination": true,
                            "Encrypted": false,
                            "VolumeSize": 30,
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": true,
                            "VolumeSize": 8,
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "NodeAMI"
                },
                "InstanceType": {
                    "Ref": "NodeInstanceType"
                },
                "AssociatePublicIpAddress": true
            }
        },
        "gtASASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "DependsOn": ["FileServerInstance"],
            "Properties": {
                "MaxSize": 10,
                "MinSize": 0,
                "DesiredCapacity": 1,
                "VPCZoneIdentifier": [
                    {
                        "Ref": "GadgetronSubnet"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "gtASLC"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "LoadBalancer"
                    }
                ],
                "MetricsCollection": [{
                    "Granularity" : "1Minute"
                }]
            }
        },
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets": [
                    {
                        "Ref": "GadgetronSubnet"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "gtCloudSecurityGroup"
                    }
                ],
                "Listeners": [
                    {
                        "LoadBalancerPort": "9080",
                        "InstancePort": "9080",
                        "Protocol": "TCP",
                        "InstanceProtocol": "TCP"
                    },
                    {
                        "LoadBalancerPort": "9002",
                        "InstancePort": "9002",
                        "Protocol": "TCP",
                        "InstanceProtocol": "TCP"
                    },
                    {
                        "LoadBalancerPort": "22",
                        "InstancePort": "22",
                        "Protocol": "TCP",
                        "InstanceProtocol": "TCP"
                    }

                ]
            }
        },
        "IGWAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGW"
                },
                "VpcId": {
                    "Ref": "GadgetronVPC"
                }
            }
        },
        "SubnetRouteTableAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "GadgetronSubnet"
                }
            }
        },
        "gtCloudSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "GadgetronVPC"
                },
                "GroupDescription": "Allow access from SSH traffic",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9080",
                        "ToPort": "9080",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    }
}
