{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "KeyName": {
            "Description": "The EC2 Key Pair to allow SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NodeInstanceType": {
            "Type": "String",
            "Default": "m4.4xlarge",
            "AllowedValues": [
                "m3.xlarge",
                "m4.4xlarge",
                "c3.4xlarge",
                "c4.8xlarge",
                "c4.4xlarge",
                "c4.2xlarge"
            ],
            "Description": "Compute node instance type"
        },
        "NodeAMI": {
            "Type": "String",
            "Default": "ami-a98cb2c3",
            "Description": "Enter ami"
        }
    },
    "Resources": {
        "GadgetronVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": "10.0.0.0/16"
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "GadgetronVPC"
                },
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
            }
        },
        "InternetGW": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": ["GadgetronVPC"],
            "Properties" : {
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
            }
        },
        "GadgetronSubnet": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "GadgetronVPC",
            "Properties": {
                "VpcId": {
                    "Ref": "GadgetronVPC"
                },
                "CidrBlock": "10.0.0.0/24"
            }
        },
        "Route": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "GatewayId": {
                    "Ref": "InternetGW"
                },
                "DestinationCidrBlock": "0.0.0.0/0"
            },
            "DependsOn": [
                "IGWAttach"
            ]
        },
        "RTBAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["GadgetronSubnet", "PublicRouteTable"],
            "Properties": {
                "SubnetId": { "Ref": "GadgetronSubnet" },
                "RouteTableId": {"Ref": "PublicRouteTable"}
            }
        },
        "gtCluster": {
            "Type": "AWS::ECS::Cluster"
        },
        "gtASLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "SecurityGroups": [
                    {
                        "Ref": "gtCloudSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                { "Fn::Join": [ "", ["echo ECS_CLUSTER=", {"Ref": "gtCluster"}, " >> /etc/ecs/ecs.config \n"]]},
                                "yum install -y wget automake fuse-devel gcc-c++ git libcurl-devel libxml2-devel make openssl-devel\n",
                                "mkdir -p /opt/install\n",
                                "cd /opt/install\n",
                                "git clone https://github.com/s3fs-fuse/s3fs-fuse.git\n",
                                "cd s3fs-fuse\n",
                                "./autogen.sh\n",
                                "./configure --prefix=/usr\n",
                                "make -j $(nproc)\n",
                                "make install\n",
                                "mkdir -p /mnt/bucket\n",                                
                                "s3fs gadgetron.dep2 /mnt/bucket -o allow_other -o iam_role=gtCloudNode\n",
                                "/sbin/service docker restart\n"
                            ]
                        ]
                    }
                },
                "IamInstanceProfile": "gtCloudNode",
                "EbsOptimized": false,
                "InstanceMonitoring": true,
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdcz",
                        "Ebs": {
                            "DeleteOnTermination": true,
                            "Encrypted": false,
                            "VolumeSize": 30,
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": true,
                            "VolumeSize": 8,
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "NodeAMI"
                },
                "InstanceType": {
                    "Ref": "NodeInstanceType"
                },
                "AssociatePublicIpAddress": true
            }
        },
        "gtASASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "MaxSize": 10,
                "MinSize": 0,
                "DesiredCapacity": 1,
                "VPCZoneIdentifier": [
                    {
                        "Ref": "GadgetronSubnet"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "gtASLC"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "LoadBalancer"
                    }
                ],
                "MetricsCollection": [{
                    "Granularity" : "1Minute"
                }]
            }
        },
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets": [
                    {
                        "Ref": "GadgetronSubnet"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "gtCloudSecurityGroup"
                    }
                ],
                "Listeners": [
                    {
                        "LoadBalancerPort": "9080",
                        "InstancePort": "9080",
                        "Protocol": "TCP",
                        "InstanceProtocol": "TCP"
                    },
                    {
                        "LoadBalancerPort": "9002",
                        "InstancePort": "9002",
                        "Protocol": "TCP",
                        "InstanceProtocol": "TCP"
                    },
                    {
                        "LoadBalancerPort": "22",
                        "InstancePort": "22",
                        "Protocol": "TCP",
                        "InstanceProtocol": "TCP"
                    }

                ],
                "HealthCheck": {
                    "HealthyThreshold" : "3",
                    "Interval" : "15",
                    "Target" : "HTTP:9080/info",
                    "Timeout" : "5",
                    "UnhealthyThreshold" : "5"
                }
                
            }
        },
        "IGWAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": ["InternetGW","GadgetronVPC"],
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGW"
                },
                "VpcId": {
                    "Ref": "GadgetronVPC"
                }
            }
        },
        "SubnetRouteTableAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["PublicRouteTable", "GadgetronSubnet"],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "GadgetronSubnet"
                }
            }
        },
        "gtCloudSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "GadgetronVPC"
                },
                "GroupDescription": "Allow access from SSH traffic",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9080",
                        "ToPort": "9080",
                        "CidrIp": "10.0.0.0/16"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9002",
                        "ToPort": "9002",
                        "CidrIp": "10.0.0.0/16"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    }
}
